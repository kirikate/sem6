tokens:

t0  ==  int
v0  ==  func
b0o2  ==  (
t0  ==  int
v1  ==  a
s1  ==  ,
t0  ==  int
v2  ==  b
b0c2  ==  )
b2o9  ==  {
v2  ==  b
o16  ==  =
v1  ==  a
o5  ==  +
v2  ==  b
s0  ==  ;
k3  ==  return
v2  ==  b
s0  ==  ;
b2c9  ==  }
t1  ==  char
v3  ==  f
b0o22  ==  (
b0c22  ==  )
b2o24  ==  {
t6  ==  float
v4  ==  j
s0  ==  ;
k3  ==  return
l0  ==  3.5f
s0  ==  ;
b2c24  ==  }
k7  ==  struct
t15  ==  MyStruct
b2o34  ==  {
t0  ==  int
v1  ==  a
s0  ==  ;
t6  ==  float
v2  ==  b
s0  ==  ;
b2c34  ==  }
s0  ==  ;
t0  ==  int
v5  ==  main
b0o45  ==  (
b0c45  ==  )
b2o47  ==  {
t1  ==  char
v6  ==  a
o16  ==  =
l1  ==  '9'
s0  ==  ;
t0  ==  int
v7  ==  b
o16  ==  =
l2  ==  7
s0  ==  ;
t15  ==  MyStruct
v8  ==  obj
s0  ==  ;
v8  ==  obj
o18  ==  .
v6  ==  a
o16  ==  =
l3  ==  56
s0  ==  ;
b0o67  ==  (
o17  ==  &
v8  ==  obj
b0c67  ==  )
o2  ==  ->
v7  ==  b
o16  ==  =
l4  ==  3.89
s0  ==  ;
v7  ==  b
o16  ==  =
v8  ==  obj
o18  ==  .
v6  ==  a
o5  ==  +
l5  ==  6
s0  ==  ;
t17  ==  int*
v9  ==  name
s0  ==  ;
t17  ==  int*
v10  ==  name2
s0  ==  ;
v6  ==  a
o16  ==  =
b0o92  ==  (
l6  ==  7
o5  ==  +
v7  ==  b
b0c92  ==  )
o3  ==  *
b0o98  ==  (
l7  ==  3
o4  ==  /
l8  ==  8
o5  ==  +
l9  ==  7
b0c98  ==  )
s0  ==  ;
k1  ==  while
b0o107  ==  (
l10  ==  56
o7  ==  -
l11  ==  7
o9  ==  >
l12  ==  8
b0c107  ==  )
b2o114  ==  {
o0  ==  ++
v6  ==  a
s0  ==  ;
b2c114  ==  }
k1  ==  while
b0o120  ==  (
l13  ==  5
o13  ==  ||
l14  ==  8
o12  ==  &&
v6  ==  a
o13  ==  ||
v7  ==  b
b0c120  ==  )
o0  ==  ++
v7  ==  b
s0  ==  ;
t0  ==  int
v11  ==  c
o16  ==  =
l15  ==  9
s0  ==  ;
k0  ==  for
b0o138  ==  (
v11  ==  c
o16  ==  =
l16  ==  0
s0  ==  ;
v11  ==  c
o8  ==  <
l17  ==  9
s0  ==  ;
o0  ==  ++
v11  ==  c
b0c138  ==  )
b2o150  ==  {
o0  ==  ++
v11  ==  c
s0  ==  ;
b2c150  ==  }
v11  ==  c
o16  ==  =
l18  ==  10
s0  ==  ;
k0  ==  for
b0o160  ==  (
v11  ==  c
o16  ==  =
l19  ==  0
s0  ==  ;
s0  ==  ;
b0c160  ==  )
b2o167  ==  {
o0  ==  ++
v11  ==  c
s0  ==  ;
b2c167  ==  }
k0  ==  for
b0o173  ==  (
s0  ==  ;
s0  ==  ;
b0c173  ==  )
b2o177  ==  {
o0  ==  ++
v6  ==  a
s0  ==  ;
b2c177  ==  }
k6  ==  if
b0o183  ==  (
v6  ==  a
o9  ==  >
l20  ==  9
o13  ==  ||
v7  ==  b
o8  ==  <
l21  ==  7
b0c183  ==  )
b2o192  ==  {
o0  ==  ++
v6  ==  a
s0  ==  ;
b2c192  ==  }
k8  ==  else
o1  ==  --
v6  ==  a
s0  ==  ;
v6  ==  a
o16  ==  =
v0  ==  func
b0o204  ==  (
l22  ==  4
s1  ==  ,
v7  ==  b
o5  ==  +
l23  ==  5
b0c204  ==  )
s0  ==  ;
t1  ==  char
v12  ==  t
o16  ==  =
l24  ==  'a'
s0  ==  ;
t14  ==  char*
v13  ==  str
o16  ==  =
l25  ==  "str"
s0  ==  ;
o3  ==  *
v10  ==  name2
o16  ==  =
b0o225  ==  (
l26  ==  78
b0c225  ==  )
s0  ==  ;
k3  ==  return
v6  ==  a
s0  ==  ;
b2c47  ==  }

-------------

table of types(t):

0 int
1 char
2 short
3 long
4 void
5 double
6 float
7 const int
8 const char
9 const short
10 const long
11 const void
12 const double
13 const float
14 char*
15 MyStruct
16 const MyStruct
17 int*

-------------

table of vars(v):

0 func int 0
1 a int 0
2 b int 0
3 f char 0
4 j float 24
5 main int 0
6 a char 47
7 b int 47
8 obj MyStruct 47
9 name int* 47
10 name2 int* 47
11 c int 47
12 t char 47
13 str char* 47

-------------

table of literals(l):

0 float 3.5f
1 char '9'
2 int 7
3 int 56
4 float 3.89
5 int 6
6 int 7
7 int 3
8 int 8
9 int 7
10 int 56
11 int 7
12 int 8
13 int 5
14 int 8
15 int 9
16 int 0
17 int 9
18 int 10
19 int 0
20 int 9
21 int 7
22 int 4
23 int 5
24 char 'a'
25 char* "str"
26 int 78

-------------

table of keywords(k):

0 for
1 while
2 do
3 return
4 switch
5 case
6 if
7 struct
8 else
9 #include

-------------

table of separators(s):

0 ;
1 ,

-------------

table of brackets(b{id}[oc]{firstToken}):

0 ()
1 []
2 {}

-------------

table of operators(o):

0 ++
1 --
2 ->
3 *
4 /
5 +
6 ==
7 -
8 <
9 >
10 <=
11 >=
12 &&
13 ||
14 &=
15 |=
16 =
17 &
18 .
